{
  "name": "plantary-nft",
  "version": "0.2.0",
  "license": "UNLICENSED",
  "scripts": {

		"test": "yarn test:unit:rs",
			"test:unit:rs": "(cd contracts/rust && cargo test -- --nocapture --color always)",

		"build": "npm run build:contract && npm run build:web",
			"build:contract": "(cd contracts/rust && ./build.sh)",
			"build:web": "npm run build:index && npm run build:intake",
				"build:index": ". ./.env && parcel build src/index.html --public-url ./",
				"build:intake": ". ./.env && parcel build src/intake.html --public-url ./",

    "deploy": "npm run deploy:contract && npm run deploy:pages",
			"deploy:contract": ". ./.env && near deploy",
			"deploy:pages": ". ./.env && test -s \"$RSYNC_TARGET\" && rsync -v dist/* $RSYNC_TARGET",





    "dev:deploy": "export NEAR_TARGET='development'; . ./.env && npm run build:contract && npm run dev:deploy:contract && npm run build:web && npm run dev",

    "dev:delete:contract": "near delete `cat ./neardev/dev-account` mykletest.testnet && rm -r ./neardev",
    "dev:init:contract": "near call --accountId mykletest.testnet `cat ./neardev/dev-account` new '{\"owner_id\": \"mykletest.testnet\"}' ",
    "dev:deploy:contract": "npx near dev-deploy",
    "dev:redeploy:contract": "export NEAR_TARGET='development';. ./.env && npm run dev:delete:contract && npm run dev:deploy:contract && npm run dev:init:contract",
    "dev": "nodemon --watch assembly -e ts --exec \"npm run start\"",

    "start": "export NEAR_TARGET='development'; echo The app is starting! It will automatically open in your browser when ready && . ./.env && parcel src/index.html --open",

    "prestart": "npm run build:contract && npm run dev:deploy:contract",

    "check_env": "test -n \"$BETA_CONTRACT_NAME\" ### \". ./.env\" in base directory to load important config!",

    "push:beta": "export NEAR_TARGET='beta'; . ./.env && npm run check_env && npm run build && rsync dist/* $BETA_RSYNC_TARGET",
    "deploy:beta": "export NEAR_TARGET='beta'; . ./.env && npm run check_env && npm run deploy && rsync dist/* $BETA_RSYNC_TARGET"
  },
  "devDependencies": {
    "@babel/preset-env": "^7.9.5",
    "@babel/preset-react": "^7.9.4",
    "babel-jest": "^26.0.0",
    "eslint": "^7.11.0",
    "eslint-plugin-react": "^7.21.4",
    "gh-pages": "^3.0.0",
    "jest": "^26.0.1",
    "jest-environment-node": "^26.0.0",
    "near-cli": "^1.5.4",
    "nodemon": "^2.0.3",
    "parcel-bundler": "^1.12.4",
    "react-test-renderer": "^16.13.1",
    "shelljs": "^0.8.4"
  },
  "dependencies": {
    "assets": "^3.0.1",
    "near-api-js": "^0.30.0",
    "react": "^16.13.1",
    "react-bootstrap": "^1.5.1",
    "react-dom": "^16.13.1",
    "regenerator-runtime": "^0.13.5"
  },
  "jest": {
    "moduleNameMapper": {
      "\\.(jpg|ico|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/src/__mocks__/fileMock.js",
      "\\.(css|less)$": "<rootDir>/src/__mocks__/fileMock.js"
    },
    "setupFiles": [
      "<rootDir>/src/jest.init.js"
    ],
    "testEnvironment": "near-cli/test_environment",
    "testPathIgnorePatterns": [
      "<rootDir>/assembly/",
      "<rootDir>/node_modules/"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
